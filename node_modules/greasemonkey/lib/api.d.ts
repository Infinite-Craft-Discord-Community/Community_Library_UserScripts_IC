/// <reference types="greasemonkey" />
export interface IGM {
    info: IInfo;
    deleteValue(name: string): any;
    getValue<T, U>(name: string, defaultValue?: U): U;
    listValues(): string[];
    setValue<T, U>(name: string, value: U): any;
    getResourceUrl(resourceName: string): string;
    openInTab(url: string, open_in_background?: boolean): Window;
    setClipboard(text: string): any;
    xmlhttpRequest(options: GMXMLHttpRequestOptions): GMXMLHttpRequestResult;
    getResourceText(resourceName: string): string;
    log(message: any): any;
    addStyle(css: string): any;
    registerMenuCommand(caption: string, commandFunc: Function, accessKey?: string): any;
}
export interface IApi extends IGM {
    GM?: IGM;
    GM_info: IInfo;
    GM_deleteValue(name: string): any;
    GM_getValue<T, U>(name: string, defaultValue?: U): U;
    GM_listValues(): string[];
    GM_setValue<T, U>(name: string, value: U): any;
    GM_getResourceUrl(resourceName: string): string;
    GM_openInTab(url: string, open_in_background?: boolean): Window;
    GM_setClipboard(text: string): any;
    GM_xmlhttpRequest(options: GMXMLHttpRequestOptions): GMXMLHttpRequestResult;
    GM_getResourceText(resourceName: string): string;
    GM_log<T>(message: T): any;
    GM_addStyle(css: string): any;
    GM_registerMenuCommand(caption: string, commandFunc: Function, accessKey?: string): any;
    unsafeWindow: Window;
}
export interface ITampermonkeyGM {
    info: ITampermonkeyInfo;
    notification?: any;
    getTab?: any;
    saveTab?: any;
    getTabs?: any;
    download?: any;
    unregisterMenuCommand?: any;
    addValueChangeListener?: any;
    removeValueChangeListener?: any;
}
export interface ITampermonkey {
    GM_info: ITampermonkeyInfo;
    GM_openInTab(url: string, loadInBackground?: boolean): any;
    GM_openInTab(url: string, options?: any): any;
    GM_notification(text: string, title?: string, image?: string, onclick?: any): any;
    GM_notification(details: {
        text?: string;
        title?: string;
        image?: string;
        highlight?: boolean;
        timeout?: number;
        ondone?: any;
        onclick?: any;
    }, ondone?: any): any;
    GM_getTab(cb: any): any;
    GM_saveTab(tab: any): any;
    GM_getTabs(cb: any): any;
    GM_download(url: string, name?: string): any;
    GM_download(details: {
        url: string;
        name?: string;
        headers?: any;
        saveAs?: boolean;
        onload?: any;
        onerror?: any;
    }): any;
    GM_unregisterMenuCommand(menuCmdId: any): any;
    GM_addValueChangeListener(name: any, cb: IGM_addValueChangeListenerFn): any;
    GM_removeValueChangeListener(listener_id: any): any;
}
export interface IGM_addValueChangeListenerFn extends Function {
    (name: string, old_value: any, new_value: any, remote: boolean): any;
}
export interface ITampermonkeyInfo extends IInfo {
}
export interface IApi extends ITampermonkey, ITampermonkeyGM {
}
export interface IApi {
    GMApi: IApi;
    default: IApi;
    isTampermonkey: boolean;
    hasGM: boolean;
    _list: string[];
    call(method: string, ...argv: any[]): any;
    callSafe(method: string): Function;
}
export interface IInfo {
    script?: {
        description?: string;
        excludes?: string[];
        includes?: string[];
        matches?: string[];
        name?: string;
        namespace?: string;
        resources?: Object;
        "run-at"?: string;
        unwrap?: boolean;
        version?: string;
    };
    scriptMetaStr?: string;
    scriptWillUpdate?: boolean;
    version?: string;
    [index: string]: any;
    scriptHandler?: string;
}
export declare const GMApi: IApi;
declare const _default: IApi;
export default _default;
