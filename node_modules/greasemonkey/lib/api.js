"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _GMApi;
(function (_GMApi_1) {
    let _hasGM = typeof GM !== 'undefined';
    let _a = [
        'GM_info',
        'GM_deleteValue',
        'GM_getValue',
        'GM_setValue',
        'GM_listValues',
        'GM_openInTab',
        'GM_setClipboard',
        'GM_xmlhttpRequest',
        'GM_getResourceText',
        'GM_log',
        'GM_addStyle',
        'GM_registerMenuCommand',
    ];
    for (let name of _a) {
        let fn = eval(`(typeof ${name} !== 'undefined') ? ${name} : void(0)`);
        _GMApi[name.replace(/^GM_/, '')] = fn;
    }
    _GMApi.getResourceUrl = (typeof GM_getResourceUrl !== 'undefined' ? GM_getResourceUrl : (typeof GM_getResourceURL !== 'undefined' ? GM_getResourceURL : void (0)));
    if (_hasGM) {
        Object.keys(GM)
            .concat([
            'info',
            'deleteValue',
            'getValue',
            'listValues',
            'setValue',
            'getResourceUrl',
            'openInTab',
            'setClipboard',
            'xmlHttpRequest',
            'getResourceText',
            'log',
            'addStyle',
            'registerMenuCommand',
        ])
            .forEach(function (value, index, array) {
            if (typeof _GMApi[value] === 'undefined') {
                _GMApi[value] = typeof GM[value] !== 'undefined' ? GM[value] : void (0);
            }
        });
    }
    if (!_hasGM) {
        try {
            let _a = [
                'GM_notification',
                'GM_getTab',
                'GM_saveTab',
                'GM_getTabs',
                'GM_download',
                'GM_unregisterMenuCommand',
                'GM_addValueChangeListener',
                'GM_removeValueChangeListener',
            ];
            for (let name of _a) {
                let value = name.replace(/^GM_/, '');
                if (typeof _GMApi[value] === 'undefined') {
                    let fn = eval(`(typeof ${name} !== 'undefined') ? ${name} : void(0)`);
                    _GMApi[value] = fn;
                }
            }
        }
        catch (e) {
            console.error(e);
        }
    }
    let _isTampermonkey = null;
    if (_GMApi.info) {
        if (!_GMApi.info.scriptHandler) {
            _isTampermonkey = false;
        }
        else if (_GMApi.info.scriptHandler == 'Tampermonkey') {
            _isTampermonkey = true;
        }
        else if (_GMApi.info.scriptHandler == 'Greasemonkey') {
            _isTampermonkey = false;
        }
    }
    else if (_hasGM) {
        _isTampermonkey = false;
    }
    let _t_list = [];
    let _t_keys = Object.keys(_GMApi);
    _GMApi.GM = _hasGM ? GM : {};
    _t_keys
        .forEach(function (value, index, array) {
        if (typeof _GMApi.GM[value] == 'undefined') {
            _GMApi.GM[value] = _GMApi[value];
        }
        _GMApi['GM_' + value] = _GMApi[value];
        _t_list.push(value);
        _t_list.push('GM_' + value);
    });
    _GMApi_1._list = _t_list;
    _GMApi_1.isTampermonkey = _isTampermonkey;
    _GMApi_1.hasGM = _hasGM;
    _GMApi.unsafeWindow = typeof unsafeWindow !== 'undefined' ? unsafeWindow : (typeof window !== 'undefined'
        ? window
        : void (0));
    function call(method, ...argv) {
        if (typeof _GMApi[method] == 'function') {
            return _GMApi[method].call(_GMApi['GM'] || null, ...argv);
        }
        else if (typeof _GMApi[method] == 'undefined') {
            console.warn(`GMApi.${method} is undefined`);
        }
        return _GMApi[method];
    }
    _GMApi_1.call = call;
    function callSafe(method) {
        if (typeof _GMApi[method] == 'function') {
            return _GMApi[method];
        }
        return new Function();
    }
    _GMApi_1.callSafe = callSafe;
})(_GMApi || (_GMApi = {}));
_GMApi._list.forEach(function (value, index, array) {
    if (value.indexOf('GM_') == 0) {
        module.exports[value] = _GMApi[value];
    }
});
_GMApi.default = _GMApi.GMApi = _GMApi;
exports.GMApi = _GMApi;
exports.default = exports.GMApi;
//# sourceMappingURL=data:application/json;base64,