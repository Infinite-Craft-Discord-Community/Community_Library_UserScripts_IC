/// <reference types="greasemonkey" />
/// <reference types="jquery" />
import bluebird = require('bluebird');
export declare const GM_XHR: (options: GMXMLHttpRequestOptions) => GMXMLHttpRequestResult;
export declare type IOptions_Share = {
    data: string | any[] | FormData;
    dataType?: string;
};
export declare type IXMLHttpRequestOptions = GMXMLHttpRequestOptions & IOptions_Share & {
    withCredentials?: boolean;
};
export declare type IAjaxOptions = JQuery.AjaxSettings & IOptions_Share & {
    xhrFields?: IXMLHttpRequestOptions;
};
export interface IXMLHttpRequestResponse extends GMXMLHttpRequestResponse {
    response?: any;
    responseType?: string;
    responseOriginal?: any;
}
export declare function makeOptions(options: IAjaxOptions & IXMLHttpRequestOptions): IXMLHttpRequestOptions;
export declare function ajax(url: any, options?: IAjaxOptions & IXMLHttpRequestOptions): bluebird<IXMLHttpRequestResponse>;
export declare function AjaxError<T = Error>(res: any, libError?: ErrorConstructor): T & {
    res?: any;
};
declare const _default: typeof import("./xhr");
export default _default;
